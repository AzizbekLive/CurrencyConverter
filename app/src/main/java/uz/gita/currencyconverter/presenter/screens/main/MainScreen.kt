package uz.gita.currencyconverter.presenter.screens.mainimport android.annotation.SuppressLintimport android.util.Logimport androidx.compose.foundation.layout.Spacerimport androidx.compose.foundation.layout.fillMaxSizeimport androidx.compose.foundation.layout.heightimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.lazy.LazyColumnimport androidx.compose.foundation.lazy.itemsimport androidx.compose.material3.Surfaceimport androidx.compose.material3.Textimport androidx.compose.runtime.Composableimport androidx.compose.runtime.Stateimport androidx.compose.runtime.collectAsStateimport androidx.compose.runtime.mutableStateOfimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.text.font.Fontimport androidx.compose.ui.text.font.FontFamilyimport androidx.compose.ui.tooling.preview.Previewimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport cafe.adriel.voyager.androidx.AndroidScreenimport cafe.adriel.voyager.hilt.getViewModelimport uz.gita.currencyconverter.Rimport uz.gita.currencyconverter.presenter.screens.main.components.mainScreenItemclass MainScreen : AndroidScreen() {    @Composable    override fun Content() {        val viewModel: MainContract.ViewModel = getViewModel<MainViewModel>()        MainScreenContent(            uiState = viewModel.uiState.collectAsState(),            viewModel::onEventDispatcher        )    }}@Composablefun MainScreenContent(    uiState: State<MainContract.UIState>,    onEventDispatcher: (MainContract.Intent) -> Unit = {},) {    Surface(modifier = Modifier.fillMaxSize()) {        LazyColumn(            modifier = Modifier.padding(16.dp)        ) {            item {                Text(                    text = "Barcha valyuta kurslari",                    fontSize = 28.sp,                    color = Color(0xFF161513),                    fontFamily = FontFamily(Font(R.font.roboto_medium)),                )                Spacer(modifier = Modifier.height(10.dp))            }            items(uiState.value.currencyList) {                Log.d("TTT", "MainScreenContent: ${uiState.value.firstClick.Ccy}")                mainScreenItem(it,                    isSelected = uiState.value.firstClick.Ccy == it.Ccy,                )                {                    Log.d("TTT", "MainScreenContent ")                    onEventDispatcher.invoke(MainContract.Intent.MoveToCurrencyScreen(it))                }            }        }    }}@SuppressLint("UnrememberedMutableState")@Composable@Preview(showBackground = true)fun MainScreenPreview() {    MainScreenContent(uiState = mutableStateOf(MainContract.UIState()))}